apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "nori.m1nthing2322.joongang"
        // multiDex 기능을 건너뛰어 컴파일 속도를 향상시킴
        minSdkVersion 21
        targetSdkVersion 27
        // Enabling multiDex support.
        multiDexEnabled true
        resConfigs "ko"
    }

    flavorDimensions "mode"
    productFlavors {
        beta {
            versionCode 40004 // >=1(major) >=0(minor) 1(0: beta, >=1: prod) 0(0: beta, 1: prod) 1(>=1: beta, 0: prod)
            versionName "4.0-beta4"
            dimension "mode"
        }
        prod {
            minSdkVersion 16
            versionCode 40110 // >=1(major) >=0(minor) 1(0: beta, >=1: prod) 0(0: beta, 1: prod) 1(>=1: beta, 0: prod)
            versionName "4.0a"
            dimension "mode"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            // debug 빌드 이름 변경
            variantFilter { variant ->
                def names = variant.flavors*.name
                // To check for a certain build type, use variant.buildType.name == "<buildType>"
                if (names.contains("Project School - Joongang HS" + "_") && names.contains(productFlavors.versionCode) && names.contains("- Debug")) {
                    // Gradle ignores any variants that satisfy the conditions above.
                    setIgnore(false)
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            // release 빌드 이름 변경
            variantFilter { variant ->
                def names = variant.flavors*.name
                // To check for a certain build type, use variant.buildType.name == "<buildType>"
                if (names.contains("Project School - Joongang HS" + "_") && names.contains(productFlavors.versionCode)) {
                    // Gradle ignores any variants that satisfy the conditions above.
                    setIgnore(false)
                }
            }
        }
    }

//dexOptions 추가
    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }
}

repositories {
    mavenCentral() // jcenter() works as well because it pulls from Maven Central
    google()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Jericho HTML Parser
    implementation files('libs/jericho-html-3.4.jar')
    // Android Support Library
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'com.android.support:support-v13:27.1.0'
    implementation 'com.android.support:support-annotations:27.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    // Google Firebase
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.firebase:firebase-ads:11.8.0'
    implementation 'com.google.firebase:firebase-appindexing:11.8.0'
    implementation 'com.google.firebase:firebase-perf:11.8.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true;
    }
    // DateTimePicker
    implementation 'com.github.flavienlaurent.datetimepicker:library:0.0.2'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    // CircleImageView
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    // org.apache.http
    implementation 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    // com.squareup.okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'